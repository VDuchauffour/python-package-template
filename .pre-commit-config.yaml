repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-docstring-first
      - id: check-xml
      - id: check-json
      - id: check-yaml
      - id: check-toml
      - id: debug-statements
      - id: check-executables-have-shebangs
      - id: check-case-conflict
      - id: check-added-large-files
      - id: detect-private-key
  # Formatter for Json, Yaml and Toml files
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [ json, yaml, toml ]
  # Formatter for markdown files
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        args: [ "--number" ]
        additional_dependencies:
          - mdformat-gfm
          - mdformat-tables
          - mdformat-frontmatter
          - mdformat-black
          - mdformat-shfmt
  # An extremely fast Python linter, written in Rust
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      #Â Run the linter
      - id: ruff
        args: [ --fix, --exit-non-zero-on-fix ]
      # Run the formatter.
      - id: ruff-format
  # Formats docstrings to follow PEP 257
  - repo: https://github.com/PyCQA/docformatter
    rev: v1.7.5
    hooks:
      - id: docformatter
        additional_dependencies: [ tomli ]
        args: [ "--in-place", "--config", "pyproject.toml" ]
  # Python tool for docstring coverage
  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        args:
          [
            "--config",
            "pyproject.toml",
            "--generate-badge",
            ".github/assets/badges",
            "--badge-style",
            "flat"
          ]
        pass_filenames: false
