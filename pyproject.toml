[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "package_name"
description = ""
readme = "README.md"
authors = [{ name = "", email = "package@package.com" }]
license = { file = "LICENSE" }
keywords = []
classifiers = []
requires-python = ">=3.9"
dynamic = ["dependencies", "optional-dependencies", "version"]

[project.urls]
Homepage = "https://github.com/VDuchauffour/python-package-template"
Source = "https://github.com/VDuchauffour/python-package-template"
Documentation = "https://github.com/VDuchauffour/python-package-template"
Tracker = "https://github.com/VDuchauffour/python-package-template/issues"

[tool.setuptools_scm]
write_to = "src/package_name/_version.py"

[tool.setuptools.dynamic.dependencies]
file = ["requirements.txt"]

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ["requirements-dev.txt"] }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
select = [
    # pycodestyle
    "E",
    # pyflakes
    "F",
    # pydocstyle
    "D",
    # flake8-bandit
    "S",
    # pyupgrade
    "UP",
    # pep8-naming
    "N",
]
# Error E501 (Line too long) is ignored because of docstrings.
ignore = [
    "S101",
    "S301",
    "S311",
    "D100",
    "D200",
    "D203",
    "D205",
    "D401",
    "E501",
]
extend-exclude = ["examples/*.py", "test/*.py", "tests/*.py", "setup.py"]
target-version = "py39"
force-exclude = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
ignore_missing_imports = true

[tool.black]
preview = true
target-version = ['py39', 'py310', 'py311']

[tool.isort]
profile = "black"
filter_files = true
known_first_party = ["package_name", "package_name.*"]

[tool.docformatter]
close-quotes-on-newline = true # D209

[tool.interrogate]
fail-under = 80
ignore-module = true
ignore-nested-functions = true
ignore-private = true
exclude = ["examples", "docs", "test", "tests", "setup.py"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=package_name --cov-report=term --cov-report=xml --cov-report=html"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
omit = ["*docs*", "*stubs*", "*examples*", "*tests*", "src/package_name/_version.py"]

[tool.coverage.report]
fail_under = 80
show_missing = true
ignore_errors = true
omit = ["*docs*", "*stubs*", "*examples*", "*tests*", "src/package_name/_version.py"]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "except ImportError:",
  "Protocol",
  "@(abc.)?abstractmethod",
  "ModuleNotFoundError",
]
